{"version":3,"file":"utils-8fe55ea7.js","sources":["../../src/components/utils.ts"],"sourcesContent":["//funciton to slugify a string\nexport const slugify = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/ /g, '-')\n    .replace(/[^\\w-]+/g, '')\n}\n\nexport function scrollToElement(\n  element: HTMLElement,\n  onlyIfNotVisibleInView = false,\n  buffer = 0,\n  callback?: () => void\n): void {\n  const rect = element.getBoundingClientRect()\n\n  // If the onlyIfNotVisibleInView flag is set, only scroll if the element is not visible in the view\n  if (onlyIfNotVisibleInView && rect.top >= 0 && rect.bottom <= window.innerHeight) {\n    callback && callback()\n    return\n  }\n\n  if (callback) {\n    let lastScrollPos = window.pageYOffset\n    let isScrolling = false\n\n    const checkScroll = () => {\n      if (window.pageYOffset === lastScrollPos) {\n        isScrolling = false\n        callback()\n      } else {\n        lastScrollPos = window.pageYOffset\n        requestAnimationFrame(checkScroll)\n      }\n    }\n\n    const onScrollComplete = () => {\n      if (!isScrolling) {\n        isScrolling = true\n        requestAnimationFrame(checkScroll)\n      }\n    }\n\n    window.addEventListener('scroll', onScrollComplete)\n  }\n\n  window.scrollTo({\n    top: rect.top + window.pageYOffset - buffer,\n    behavior: 'smooth'\n  })\n}\n\nexport const fixNumberMaxLength = () => {\n  const numberFields = document.querySelectorAll('input[type=\"number\"]')\n  numberFields.forEach((field) => {\n    field.addEventListener('input', (e) => {\n      const target = e.target as HTMLInputElement\n      const maxLength = target.getAttribute('maxlength')\n      if (maxLength) {\n        if (target.value.length > Number(maxLength)) {\n          target.value = target.value.slice(0, Number(maxLength))\n        }\n      }\n    })\n  })\n}\n"],"names":["slugify","str","scrollToElement","element","onlyIfNotVisibleInView","buffer","callback","rect","lastScrollPos","isScrolling","checkScroll","onScrollComplete","fixNumberMaxLength","field","e","target","maxLength"],"mappings":"AACa,MAAAA,EAAWC,GACfA,EACJ,YACA,EAAA,QAAQ,KAAM,GAAG,EACjB,QAAQ,WAAY,EAAE,EAGpB,SAASC,EACdC,EACAC,EAAyB,GACzBC,EAAS,EACTC,EACM,CACA,MAAAC,EAAOJ,EAAQ,wBAGrB,GAAIC,GAA0BG,EAAK,KAAO,GAAKA,EAAK,QAAU,OAAO,YAAa,CAChFD,GAAYA,EAAS,EACrB,OAGF,GAAIA,EAAU,CACZ,IAAIE,EAAgB,OAAO,YACvBC,EAAc,GAElB,MAAMC,EAAc,IAAM,CACpB,OAAO,cAAgBF,GACXC,EAAA,GACLH,MAETE,EAAgB,OAAO,YACvB,sBAAsBE,CAAW,EACnC,EAGIC,EAAmB,IAAM,CACxBF,IACWA,EAAA,GACd,sBAAsBC,CAAW,EACnC,EAGK,OAAA,iBAAiB,SAAUC,CAAgB,EAGpD,OAAO,SAAS,CACd,IAAKJ,EAAK,IAAM,OAAO,YAAcF,EACrC,SAAU,QAAA,CACX,CACH,CAEO,MAAMO,EAAqB,IAAM,CACjB,SAAS,iBAAiB,sBAAsB,EACxD,QAASC,GAAU,CACxBA,EAAA,iBAAiB,QAAUC,GAAM,CACrC,MAAMC,EAASD,EAAE,OACXE,EAAYD,EAAO,aAAa,WAAW,EAC7CC,GACED,EAAO,MAAM,OAAS,OAAOC,CAAS,IACxCD,EAAO,MAAQA,EAAO,MAAM,MAAM,EAAG,OAAOC,CAAS,CAAC,EAE1D,CACD,CAAA,CACF,CACH"}