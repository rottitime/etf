{"version":3,"mappings":"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","names":["showAllText","Accordion","__publicField","id","panel","i","button","open","showAll","icon","expanded","btn","setupAccordion","Govicon","response","_a","html","__variableDynamicImportRuntimeHelper","__vitePreload","_b","iconName","setupIcon","SelectField","target","parent","value","classname","select","e","setupSelect","setupSmoothScroll","el","href","scrollElement","scrollToElement","setButtonState","cleanup","setupMobileMenu","HintBox","idContent","idButton","content","toggleBtn","opened","wrapper","setupHintbox","MultiSelect","option","tag","multiselect","source","attribute","options","selectedValue","newValue","toRemove","selectedValues","optionsHidden","index","setupMultiselect","validSegments","segments","segment","createCircularProgressBar","container","svg","backgroundCircle","totalPercentage","acc","totalProgress","startingRotation","progressCircle","radius","numRadius","circumference","dashOffset","purpleLine","setupCircularProgressBar","segmentsData","error","hasDevScripts","setupFiltersAccordion","setupCard","setupFilters","fixNumberMaxLength","isTablet","onViewportChange","mobileMenuCleanup","preview"],"sources":["../../src/components/accordion.ts","../../src/components/icon.ts","../../src/components/dropdown.ts","../../src/components/smooth-scroll.ts","../../src/components/mobile-menu.ts","../../src/components/hintbox.ts","../../src/components/multiselect.ts","../../src/components/circular-progress-bar.ts","../../src/main.ts","../../.storybook/preview.ts"],"sourcesContent":["const showAllText = ['Show all sections', 'Hide all sections']\n\nclass Accordion extends HTMLDivElement {\n  buttonId: string\n  sectionId: string\n\n  constructor() {\n    super()\n\n    const id = crypto.randomUUID()\n    this.buttonId = `btn-${id}`\n    this.sectionId = `pnl-${id}`\n  }\n\n  connectedCallback() {\n    setTimeout(() => this.setup())\n  }\n\n  private setupPanels() {\n    this.querySelectorAll('.accordion-panel').forEach((panel, i) => {\n      panel.setAttribute('role', 'region')\n      panel.setAttribute('aria-labelledby', this.buttonId + `-${i}`)\n      panel.id = this.sectionId + `-${i}`\n    })\n  }\n\n  private isAllOpen = () =>\n    this.querySelectorAll('.accordion-title[aria-expanded=\"false\"]').length === 0\n\n  private setupButtons() {\n    this.querySelectorAll('.accordion-title').forEach((button, i) => {\n      button.setAttribute('role', 'button')\n      button.id = this.buttonId + `-${i}`\n      button.setAttribute(\n        'aria-expanded',\n        String(button.getAttribute('aria-expanded') === 'true' || false)\n      )\n      button.setAttribute('aria-controls', this.sectionId + `-${i}`)\n      button.appendChild(this.createIcon())\n\n      //event to toggle aria-expanded\n      button.addEventListener('click', () => {\n        button.setAttribute(\n          'aria-expanded',\n          String(!(button.getAttribute('aria-expanded') === 'true' || false))\n        )\n        this.isAllOpen() && this.setShowAllState(true)\n      })\n    })\n  }\n\n  private setShowAllState(open: boolean) {\n    const showAll = this.querySelector<HTMLButtonElement>('.show-all')\n    if (showAll) {\n      showAll.setAttribute('aria-expanded', String(open))\n      showAll.childNodes[0].nodeValue = open ? showAllText[1] : showAllText[0]\n    }\n  }\n\n  private createIcon() {\n    const icon = document.createElement('gov-icon')\n    icon.setAttribute('key', 'arrow-down')\n    icon.setAttribute('role', 'presentation')\n    icon.setAttribute('aria-hidden', 'true')\n    return icon\n  }\n\n  private createShowAll() {\n    const button = document.createElement('button')\n    button.setAttribute('type', 'button')\n    button.setAttribute('class', 'show-all txt-link small')\n    button.setAttribute('aria-expanded', 'false')\n    button.innerText = showAllText[0]\n    // button.appendChild(this.createIcon())\n\n    button.addEventListener('click', () => {\n      const expanded = button.getAttribute('aria-expanded') === 'true' || false\n\n      this.setShowAllState(!expanded)\n\n      this.querySelectorAll('.accordion-title').forEach((btn) =>\n        btn.setAttribute('aria-expanded', String(!expanded))\n      )\n    })\n\n    return button\n  }\n\n  private setup() {\n    this.setupButtons()\n    this.setupPanels()\n    const showAll = this.createShowAll()\n\n    this.prepend(showAll)\n  }\n}\n\nconst setupAccordion = () =>\n  customElements.define('idotai-accordion', Accordion, { extends: 'div' })\n\nexport default setupAccordion\n","class Govicon extends HTMLElement {\n  newCache?: Cache\n  enableCache = true\n\n  constructor() {\n    super()\n  }\n\n  connectedCallback() {\n    this.setup()\n  }\n\n  private async getIcon(icon: string) {\n    if (this.enableCache) {\n      const response = await this.newCache?.match(icon)\n      if (response) return response.text()\n    }\n    const html = (await import(`../../public/svg/${icon}.svg`)).default\n\n    if (this.enableCache)\n      this.newCache?.put(\n        icon,\n        new Response(html, { headers: { 'Content-Type': 'image/svg+xml' } })\n      )\n\n    return html\n  }\n\n  private async setup() {\n    this.newCache = await caches.open('new-cache')\n    const iconName = this.getAttribute('key')\n    if (!iconName) return\n\n    this.innerHTML = await this.getIcon(iconName)\n  }\n}\n\nconst setupIcon = () => {\n  customElements.define('gov-icon', Govicon)\n}\n\nexport default setupIcon\n","class SelectField extends HTMLDivElement {\n  constructor() {\n    super()\n  }\n\n  connectedCallback() {\n    this.setup()\n  }\n\n  private setup() {\n    const select = this.querySelector('select') as HTMLSelectElement\n\n    this.setHasValue(select)\n    select.addEventListener('change', (e) =>\n      this.setHasValue(e.target as HTMLSelectElement)\n    )\n  }\n\n  private setHasValue = (target: HTMLSelectElement) => {\n    const parent = target?.parentNode as HTMLDivElement\n    const { value } = target\n    const classname = 'has-value'\n\n    return value ? parent?.classList.add(classname) : parent?.classList.remove(classname)\n  }\n}\n\nconst setupSelect = () =>\n  customElements.define('select-field', SelectField, { extends: 'div' })\n\nexport default setupSelect\n","import { scrollToElement } from './utils'\n\nconst setupSmoothScroll = () => {\n  document.querySelectorAll<HTMLAnchorElement>('a.smooth-scroll').forEach((el) => {\n    el.addEventListener('click', (e) => {\n      e.preventDefault()\n      const href = (e.target as HTMLAnchorElement)?.getAttribute('href')\n      const scrollElement = href && document.querySelector<HTMLElement>(href)\n\n      if (scrollElement) {\n        scrollElement.classList.remove('scrolled')\n        scrollElement.classList.add('scrolling')\n        scrollToElement(scrollElement, true, 16, () => {\n          scrollElement.classList.remove('scrolling')\n          scrollElement.classList.add('scrolled')\n        })\n      }\n    })\n  })\n}\n\nexport default setupSmoothScroll\n","const setButtonState = (open: boolean) => {\n  open\n    ? document.querySelector('body')?.classList.add('darken')\n    : document.querySelector('body')?.classList.remove('darken')\n  ;(document.getElementById('main-header-mobile-menu') as HTMLButtonElement).setAttribute(\n    'aria-expanded',\n    Boolean(open).toString()\n  )\n}\n\nexport const cleanup = () => setButtonState(false)\n\nconst setupMobileMenu = () => {\n  document\n    .getElementById('main-header-mobile-menu')\n    ?.addEventListener('click', (e) =>\n      setButtonState(\n        (e.currentTarget as HTMLButtonElement).getAttribute('aria-expanded') !== 'true'\n      )\n    )\n}\n\nexport default setupMobileMenu\n","class HintBox extends HTMLElement {\n  constructor() {\n    super()\n  }\n\n  connectedCallback() {\n    this.setAttribute('hidden', 'true') //hide while rendering. prevents flash of unstyled content\n    setTimeout(() => this.setup())\n  }\n\n  private setup() {\n    const id = crypto.randomUUID()\n    const idContent = `content_${id}`\n    const idButton = `button_${id}`\n    const content = this.querySelector('.content')\n    if (!content) return\n\n    //button setup\n    const toggleBtn = document.createElement('button')\n    toggleBtn.setAttribute('id', idButton)\n    toggleBtn.classList.add('txt-link')\n    toggleBtn.setAttribute('type', 'button')\n    toggleBtn.setAttribute('aria-expanded', this.dataset.open || 'false')\n    toggleBtn.setAttribute('aria-controls', idContent)\n    toggleBtn.innerHTML =\n      '<gov-icon key=\"help\"></gov-icon>' + (this.getAttribute('aria-label') || 'Hint')\n    toggleBtn.addEventListener('click', () => {\n      const opened = toggleBtn.getAttribute('aria-expanded') === 'true'\n      toggleBtn.setAttribute('aria-expanded', String(!opened))\n    })\n    this.prepend(toggleBtn)\n\n    //content wrapper\n    const wrapper = document.createElement('div')\n    const parent = content.parentNode\n    wrapper.classList.add('content-wrapper')\n    wrapper.setAttribute('id', idContent)\n    wrapper.setAttribute('aria-labelledby', idButton)\n    wrapper.setAttribute('role', 'region')\n    parent?.insertBefore(wrapper, content)\n    wrapper.appendChild(content)\n    this.removeAttribute('hidden')\n  }\n}\n\nconst setupHintbox = () => customElements.define('hint-box', HintBox)\n\nexport default setupHintbox\n","type MultiValue = {\n  value: string\n  text: string\n}\n\nclass MultiSelect extends HTMLDivElement {\n  multiValues: MultiValue[] = []\n\n  constructor() {\n    super()\n  }\n\n  connectedCallback() {\n    setTimeout(() => this.setup())\n  }\n\n  private createTag(option: MultiValue) {\n    const tag = document.createElement('div')\n    tag.classList.add('chip')\n    tag.innerHTML = option.text\n\n    const icon = document.createElement('gov-icon')\n    icon.classList.add('close')\n    icon.setAttribute('key', 'cross')\n    icon.setAttribute('role', 'button')\n    icon.addEventListener('click', () => this.multiRemove(option), true)\n    tag.appendChild(icon)\n    return tag\n  }\n\n  private createMuliSelect() {\n    // Create a <selectmenu> element to replace the original <select> element\n    const multiselect = document.createElement('selectmenu')\n    // Copy data-* attributes from the <select> element to the <selectmenu> element\n    const source = this.querySelector('select')\n\n    Array.from(source?.attributes || []).forEach((attribute) => {\n      multiselect.setAttribute(\n        attribute.nodeName === 'id' ? 'data-id' : attribute.nodeName,\n        attribute?.nodeValue || ''\n      )\n    })\n    // Copy <option> elements from the <select> element to the <selectmenu> element\n    const options = source?.querySelectorAll<HTMLOptionElement>('option') || []\n\n    const button = document.createElement('div')\n\n    button.setAttribute('slot', 'button')\n    button.setAttribute('behavior', 'button')\n    multiselect.prepend(button)\n\n    options.forEach((option) => {\n      if (option.selected) this.multiAdd({ value: option.value, text: option.innerText })\n      multiselect.appendChild(option.cloneNode(true))\n    })\n\n    const selectedValue = document.createElement('div')\n    selectedValue.setAttribute('slot', 'selected-value')\n    selectedValue.setAttribute('behavior', 'selected-value')\n    multiselect.appendChild(selectedValue)\n\n    multiselect.addEventListener('click', (e) => {\n      const option = (e.target as HTMLOptionElement)?.closest('option')\n      if (!option) return\n\n      const newValue = { value: option.value, text: option.text }\n\n      this.multiValues.find(({ value }) => value === newValue.value)\n        ? this.multiRemove(newValue)\n        : this.multiAdd(newValue)\n    })\n\n    return multiselect\n  }\n\n  private multiAdd(value: MultiValue) {\n    this.multiValues.push(value)\n    this.multiRefreshSelectedValues()\n    this.multiRefreshOptions()\n  }\n\n  private multiRemove(toRemove: MultiValue) {\n    this.multiValues = this.multiValues.filter(({ value }) => value !== toRemove.value)\n\n    this.multiRefreshSelectedValues()\n    this.multiRefreshOptions()\n  }\n\n  private multiRefreshSelectedValues() {\n    // Get the container element for the selected values\n    const selectedValues = this.querySelector('.selected-values')\n    // If it exists, clear it\n    if (selectedValues) {\n      selectedValues.innerHTML = ''\n      // For each selected value, create a tag and append it to the container\n      this.multiValues.forEach((option) =>\n        selectedValues.appendChild(this.createTag(option))\n      )\n    }\n  }\n\n  private multiRefreshOptions() {\n    const multiselect = this.querySelector('selectmenu') as HTMLSelectElement\n    const options = (multiselect && multiselect.querySelectorAll('option')) || []\n    const optionsHidden = this.querySelector('select')?.querySelectorAll('option') || []\n    options.forEach((option, index) => {\n      if (this.multiValues.find(({ value }) => value === option.value)) {\n        option.setAttribute('selected', '')\n        optionsHidden[index].setAttribute('selected', '')\n      } else {\n        option.removeAttribute('selected')\n        optionsHidden[index].removeAttribute('selected')\n      }\n    })\n  }\n\n  // Create a div to store the selected values\n  private setup() {\n    const selectedValues = document.createElement('div')\n    selectedValues.classList.add('selected-values')\n\n    // Hide the original select element and prepend the new elements\n    this.querySelector('select')?.setAttribute('hidden', '')\n    this.prepend(this.createMuliSelect())\n    this.prepend(selectedValues)\n\n    // Add the selected values and options to the new elements\n    this.multiRefreshSelectedValues()\n    this.multiRefreshOptions()\n  }\n}\n\nconst setupMultiselect = () =>\n  customElements.define('multi-select', MultiSelect, { extends: 'div' })\n\nexport default setupMultiselect\n","type Segment = {\n  color: string\n  percentage: number\n}\n\nfunction validSegments(segments: unknown): segments is Segment[] {\n  if (!Array.isArray(segments)) return false\n\n  return segments.every((segment) => {\n    return (\n      typeof segment === 'object' &&\n      typeof segment.color === 'string' &&\n      typeof segment.percentage === 'number' &&\n      segment.percentage >= 0 &&\n      segment.percentage <= 100\n    )\n  })\n}\n\nfunction createCircularProgressBar(container: HTMLElement, segments: Segment[]): void {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n  svg.setAttribute('viewBox', '0 0 100 100')\n  svg.classList.add('progress-bar')\n\n  const backgroundCircle = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'circle'\n  )\n  backgroundCircle.setAttribute('cx', '50')\n  backgroundCircle.setAttribute('cy', '50')\n  backgroundCircle.setAttribute('r', '40')\n  backgroundCircle.classList.add('progress-bar-background')\n\n  svg.appendChild(backgroundCircle)\n\n  const totalPercentage = segments.reduce((acc, segment) => acc + segment.percentage, 0)\n  let totalProgress = 0\n\n  segments.forEach((segment) => {\n    let startingRotation = -90 - (totalPercentage / 2) * 1.5 - (1 / 6) * 360\n\n    const progressCircle = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'circle'\n    )\n    progressCircle.setAttribute('cx', '50')\n    progressCircle.setAttribute('cy', '50')\n    progressCircle.setAttribute('r', '40')\n    progressCircle.classList.add('progress-bar-foreground')\n    progressCircle.style.stroke = segment.color\n    progressCircle.style.strokeDasharray = '0'\n    progressCircle.style.strokeDashoffset = '0'\n    progressCircle.style.transformOrigin = '50% 50%'\n    progressCircle.style.transform = `rotate(${\n      (totalProgress * 360) / 100 + startingRotation\n    }deg)` // Updated rotation calculation\n\n    svg.appendChild(progressCircle)\n\n    const radius = progressCircle.getAttribute('r')\n    if (typeof radius === 'string') {\n      const numRadius = parseFloat(radius)\n      const circumference = 2 * Math.PI * numRadius\n      const dashOffset = circumference * (1 - segment.percentage / 100)\n\n      progressCircle.style.strokeDasharray = `${circumference} ${circumference}`\n      progressCircle.style.strokeDashoffset = dashOffset.toString()\n    } else {\n      console.error(\n        'Failed to retrieve the radius attribute from the progressCircle element'\n      )\n    }\n\n    totalProgress += segment.percentage\n  })\n\n  const purpleLine = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n  purpleLine.setAttribute('x', '50')\n  purpleLine.setAttribute('y', '11')\n  purpleLine.setAttribute('width', '2')\n  purpleLine.setAttribute('height', '25')\n  purpleLine.style.fill = 'var(--color-purple)'\n  purpleLine.style.transformOrigin = '50% 50%'\n  purpleLine.style.transform = 'rotate(160deg) translateY(-14%)'\n\n  svg.appendChild(purpleLine)\n\n  container.appendChild(svg)\n}\n\nconst setupCircularProgressBar = () => {\n  const progressBarContainers = document.querySelectorAll('.circular-progress-bar')\n\n  progressBarContainers.forEach((container: Element) => {\n    try {\n      const segmentsData = JSON.parse(container.getAttribute('data-segments') || 'null')\n\n      if (validSegments(segmentsData)) {\n        createCircularProgressBar(container as HTMLElement, segmentsData)\n      } else {\n        console.error(\n          'Invalid data-segments attribute:',\n          container.getAttribute('data-segments')\n        )\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error('Failed to parse data-segments:', error.message)\n      } else {\n        console.error('Failed to parse data-segments:', error)\n      }\n    }\n  })\n}\n\nexport default setupCircularProgressBar\n","import './style/vars.css'\nimport './style/animation.css'\nimport './style/fonts.css'\nimport './style/base.css'\nimport './style/template/index.css'\nimport './style/template/main-header.css'\nimport './style/forms/index.css'\nimport './style/forms/form-group.css'\nimport './style/forms/checkbox.css'\nimport './style/forms/radio.css'\nimport './style/forms/select.css'\nimport './style/forms/multiselect.css'\nimport './style/components/index.css'\nimport './style/components/accordion.css'\nimport './style/components/alert.css'\nimport './style/components/buttons.css'\nimport './style/components/breadcrumb.css'\nimport './style/components/card.css'\nimport './style/components/chip.css'\nimport './style/components/datagrid.css'\nimport './style/components/hintbox.css'\nimport './style/components/menu-list.css'\nimport './style/components/phase-banner.css'\nimport './style/components/progress-list.css'\nimport './style/components/filters-accordion.css'\nimport './style/components/circular-progress-bar.css'\nimport './style/pages.css'\nimport './style/components/progress-bar-horizontal.css'\nimport './style/components/progress-bar-horizontal-wide.css'\nimport './style/utilities.css'\nimport setupFiltersAccordion from './components/filters-accordion'\nimport setupAccordion from './components/accordion'\nimport setupCard from './components/card'\nimport icon from './components/icon'\nimport setupSelect from './components/dropdown'\nimport setupFilters from './components/filters'\nimport setupSmoothScroll from './components/smooth-scroll'\nimport setupMobileMenu, { cleanup as mobileMenuCleanup } from './components/mobile-menu'\nimport setupHintbox from './components/hintbox'\nimport setupMultiselect from './components/multiselect'\nimport setupCircularProgressBar from './components/circular-progress-bar'\nimport { fixNumberMaxLength } from './components/utils'\n\n//local development purposes only. to replace prod assets with dev\ndeclare global {\n  function myFunction(): boolean\n  // eslint-disable-next-line no-var\n  var devMode: boolean\n}\n\n//check if dev scripts have executed when in prod mode\nconst hasDevScripts = (): boolean =>\n  globalThis.devMode && globalThis.devMode && import.meta.env.MODE !== 'development'\n\n//high priority scripts\n;(function () {\n  if (hasDevScripts()) return\n  icon()\n  setupHintbox()\n  setupSelect()\n  setupMultiselect()\n  setupAccordion()\n})()\n\n//low priority scripts\nwindow.addEventListener('load', () => {\n  //check: dev mode has already been set then do not run prod files\n  if (hasDevScripts()) return\n  setupFiltersAccordion()\n  setupCard()\n  setupFilters()\n  setupSmoothScroll()\n  setupMobileMenu()\n  setupCircularProgressBar()\n  fixNumberMaxLength()\n})\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const isTablet = window.matchMedia('(min-width: 800px)')\n  const onViewportChange = () => {\n    if (isTablet.matches) {\n      mobileMenuCleanup()\n    }\n  }\n\n  isTablet.addEventListener('change', onViewportChange)\n})\n","import type { Preview } from '@storybook/html'\nimport '../src/main'\n\nconst preview: Preview = {\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    },\n    backgrounds: {\n      default: 'White',\n      values: [\n        { name: 'light grey', value: '#E3E8EE' },\n        { name: 'White', value: '#fff' }\n      ]\n    }\n  }\n}\n\nexport default preview\n"],"file":"assets/preview-182ffc06.js"}