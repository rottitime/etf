{"version":3,"file":"filters-accordion-adfd64e7.js","sources":["../../src/components/filters.ts","../../src/components/filters-accordion.ts"],"sourcesContent":["import '../style/filters.css'\n\nconst submit = (filterControl: HTMLElement, category?: string) => {\n  const form = filterControl.closest('form') as HTMLFormElement\n\n  if (form) {\n    //set active filter\n    form\n      .querySelector<HTMLInputElement>('input[type=\"hidden\"][name=\"active_filter\"]')\n      ?.setAttribute('value', category ? category : '')\n    form.submit()\n  }\n}\n\nconst onReset = (filterControl: HTMLElement) => {\n  filterControl.querySelectorAll('button[type=\"reset\"]').forEach((button) => {\n    button.addEventListener('click', () => {\n      const checkboxes = filterControl.querySelectorAll<HTMLInputElement>(\n        'input[type=checkbox][name]:checked'\n      )\n\n      checkboxes.forEach((checkbox) => {\n        checkbox.removeAttribute('checked')\n        checkbox.checked = false\n      })\n\n      submit(filterControl, checkboxes[0]?.name)\n    })\n  })\n}\n\nconst setupSearch = (filterControl: HTMLElement) => {\n  filterControl\n    .querySelectorAll<HTMLInputElement>('input[data-controls]')\n    .forEach((search) => {\n      search.addEventListener('keyup', () => {\n        const value = search.value.toLowerCase()\n        const { controls } = search.dataset\n        filterControl\n          .querySelectorAll<HTMLInputElement>(\n            `input[type=checkbox][name=${controls}][value]`\n          )\n          .forEach((checkbox) => {\n            const parent = checkbox.closest<HTMLLabelElement>('.checkbox')\n            if (parent) {\n              parent?.textContent?.toLowerCase().includes(value)\n                ? (parent.style.display = '')\n                : (parent.style.display = 'none')\n            }\n          })\n      })\n    })\n}\n\nconst onFilterClick = (filterControl: HTMLElement) => {\n  // let checked = false\n  filterControl\n    .querySelectorAll<HTMLInputElement>('input[type=\"checkbox\"]')\n    .forEach((checkbox) => {\n      // if (checkbox.checked) checked = true\n      checkbox.addEventListener('change', () => {\n        const { name } = checkbox\n\n        submit(filterControl, name)\n      })\n    })\n}\n\nconst setupFilters = () => {\n  document.querySelectorAll<HTMLElement>('.filter-control').forEach((filterControl) => {\n    onReset(filterControl)\n    onFilterClick(filterControl)\n    setupSearch(filterControl)\n  })\n}\n\nexport default setupFilters\n","const setupFiltersAccordion = () => {\n  const accordionItems = document.querySelectorAll('.accordion li')\n\n  //remove all active classname\n  const removeAllActive = (el: Element) => {\n    el.parentNode\n      ?.querySelectorAll('[aria-selected]')\n      .forEach((active) => active.removeAttribute('aria-selected'))\n  }\n\n  //icons\n  document\n    .querySelectorAll('.accordion li > h3 button')\n    .forEach((button) =>\n      button.insertAdjacentHTML('beforeend', '<gov-icon key=\"arrow-down\"></gov-icon>')\n    )\n\n  //create wrapper\n  document.querySelectorAll('.accordion-content').forEach((content) => {\n    const id = `wrapper-${crypto.randomUUID()}`\n    const buttonid = `button-${crypto.randomUUID()}`\n    const wrapper = document.createElement('div')\n    const parent = content.parentNode\n    const parentButton = parent?.querySelector('button')\n\n    wrapper.classList.add('accordion-content-wrapper')\n    wrapper.setAttribute('id', id)\n    wrapper.setAttribute('role', 'region')\n    wrapper.setAttribute('aria-labelledby', buttonid)\n\n    wrapper?.addEventListener('transitionend', () => wrapper.setAttribute('style', ''))\n    parent?.insertBefore(wrapper, content)\n    parentButton?.setAttribute('aria-controls', id)\n    parentButton?.setAttribute('id', buttonid)\n    parentButton?.setAttribute(\n      'aria-expanded',\n      new Boolean(parentButton?.hasAttribute('aria-selected')).toString()\n    )\n\n    wrapper.appendChild(content)\n  })\n\n  //click behaviour\n  accordionItems.forEach((accordion) => {\n    const button = accordion.querySelector('button')\n    const wrapper = accordion.querySelector(\n      '.accordion-content-wrapper'\n    ) as HTMLDivElement\n    const content = wrapper?.querySelector('.accordion-content')\n\n    button?.addEventListener('click', () => {\n      const parent = button.parentNode as Element\n\n      if (parent?.hasAttribute('aria-selected')) {\n        const height = content?.clientHeight\n        wrapper?.setAttribute('style', `height:${height}px`)\n        removeAllActive(accordion)\n        button.setAttribute('aria-expanded', 'false')\n      } else {\n        removeAllActive(accordion)\n        parent.setAttribute('aria-selected', 'true')\n        const height = content?.clientHeight\n        wrapper?.setAttribute('style', `max-height:${height}px`)\n        button.setAttribute('aria-expanded', 'true')\n      }\n    })\n  })\n}\n\nexport default setupFiltersAccordion\n"],"names":["submit","filterControl","category","form","_a","onReset","button","checkboxes","checkbox","setupSearch","search","value","controls","parent","onFilterClick","name","setupFilters","setupFiltersAccordion","accordionItems","removeAllActive","el","active","content","id","buttonid","wrapper","parentButton","accordion","height"],"mappings":"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"}